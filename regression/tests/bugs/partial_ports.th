#a Copyright
#  
#  This file 'vector_test_harness.th' copyright Gavin J Stark 2003, 2004
#  
#  This program is free software; you can redistribute it and/or modify it under
#  the terms of the GNU General Public License as published by the Free Software
#  Foundation, version 2.0.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even implied warranty of MERCHANTABILITY
#  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
#  for more details.

int toggle

printf "Regression batch arg Running partial_ports test to check for bugs in module instance outputs being indice/subscripts of nets reported Feb 4th 2008"

chain_in.reset 0
set toggle 0

bfm_wait 60

for i 0 10 1
xor toggle toggle 1
chain_in.drive toggle
bfm_wait 1
next i

for i 0 1000 1
xor toggle toggle 1
chain_in.drive toggle
bfm_wait 1
#printf "%d0% Input %d1% Toggle %d2% Count %d3%" global_cycle() chain_out.value() toggle cnt.value()
bne toggle 0 toggle_is_1_input_should_be_1
# Toggle is 0, input should be 2
beq chain_out.value() 2 check_count
printf "%d0% Expected input of 2: Input %d1% Toggle %d2% Count %d3%" global_cycle() chain_out.value() toggle cnt.value()
fail global_cycle() "**************************************************************************** Test failed"
goto check_count

toggle_is_1_input_should_be_1:
beq chain_out.value() 1 check_count
printf "%d0% Expected input of 1: Input %d1% Toggle %d2% Count %d3%" global_cycle() chain_out.value() toggle cnt.value()
fail global_cycle() "**************************************************************************** Test failed"
goto check_count

check_count:
beq cnt.value() 2 count_pass
printf "%d0% Expected count of 2: Input %d1% Toggle %d2% Count %d3%" global_cycle() chain_out.value() toggle cnt.value()
fail global_cycle() "**************************************************************************** Test failed"
count_pass:

next i

pass global_cycle() "Test succeeded"
end


